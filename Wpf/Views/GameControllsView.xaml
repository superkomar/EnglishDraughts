<UserControl x:Class="Wpf.Views.GameControllsView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:enums="clr-namespace:Core.Enums;assembly=Core"
      xmlns:resx="clr-namespace:Wpf.Properties"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:PlayerSide"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type RowDefinition}">
            <Setter Property="Height" Value="50"/>
        </Style>

        <Style TargetType="{x:Type ColumnDefinition}">
            <Setter Property="Width" Value="100"/>
        </Style>
    </UserControl.Resources>
    
    <DockPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--Firt Row-->
            <Button Grid.Row="0" Grid.Column="0"
                    Content="{x:Static resx:Resources.Wpf_ButtonContent_Start}"
                    Command="{Binding StartCmd.Value, Mode=TwoWay}"
                    IsEnabled="{Binding StartCmd.IsEnabled, Mode=TwoWay}"/>

            <Button Grid.Row="0" Grid.Column="1"
                    Content="{x:Static resx:Resources.Wpf_ButtonContent_Finish}"
                    Command="{Binding FinishCmd.Value, Mode=TwoWay}"
                    IsEnabled="{Binding FinishCmd.IsEnabled, Mode=TwoWay}"/>

            <!--Second Row-->
            <TextBlock Grid.Row="1" Grid.Column="0"
                       Text="{x:Static resx:Resources.Wpf_TextBlock_ChooseSide}"/>

            <ComboBox Grid.Row="1" Grid.Column="1"
                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                      SelectedItem="{Binding Side.Value}"
                      IsEnabled="{Binding Side.IsEnabled, Mode=OneWay}"/>

            <!--Fourth Row-->
            <TextBlock Grid.Row="2" Grid.Column="0"
                       Text="{x:Static resx:Resources.Wpf_TextBlock_RobotTime}"/>

            <TextBox Grid.Row="2" Grid.Column="1"
                     VerticalAlignment="Center"
                     PreviewTextInput="NumberValidationTextBox"
                     Text="{Binding RobotTime.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsEnabled="{Binding RobotTime.IsEnabled, Mode=OneWay}"/>

            <!--Firt Row-->
            <Button Grid.Row="3" Grid.Column="0"
                    Content="{x:Static resx:Resources.Wpf_ButtonContent_Undo}"
                    Command="{Binding UndoCmd.Value}"
                    IsEnabled="{Binding UndoCmd.IsEnabled}"/>

            <Button Grid.Row="3" Grid.Column="1"
                    Content="{x:Static resx:Resources.Wpf_ButtonContent_Redo}"
                    Command="{Binding RedoCmd.Value}"
                    IsEnabled="{Binding RedoCmd.IsEnabled}"/>
            
        </Grid>
    </DockPanel>
</UserControl>
